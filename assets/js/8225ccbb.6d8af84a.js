"use strict";(self.webpackChunkdoc_mcp=self.webpackChunkdoc_mcp||[]).push([[536],{4006:(e,n,t)=>{t.d(n,{A:()=>i});const i=t.p+"assets/images/mcp1-d3bfe8a3adff89373bb68e2cdff4aad4.png"},7771:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>a,default:()=>h,frontMatter:()=>o,metadata:()=>i,toc:()=>l});const i=JSON.parse('{"id":"what-is-mcp","title":"What is MCP?","description":"The Model Context Protocol (MCP) is an open standard designed to enable intelligent AI applications to seamlessly communicate and interoperate with a wide range of external tools and services. MCP abstracts away integration complexities by defining a unified, extensible communication layer that supports context-aware interactions.","source":"@site/docs/03-what-is-mcp.md","sourceDirName":".","slug":"/what-is-mcp","permalink":"/doc-mcp/what-is-mcp","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":3,"frontMatter":{"sidebar_label":"What is MCP?","slug":"/what-is-mcp"},"sidebar":"tutorialSidebar","previous":{"title":"Why MCP?","permalink":"/doc-mcp/why-mcp"},"next":{"title":"Demo with VSCode","permalink":"/doc-mcp/mcp-demo-vsc"}}');var s=t(4848),r=t(8453);const o={sidebar_label:"What is MCP?",slug:"/what-is-mcp"},a="What is MCP?",c={},l=[{value:"Overview of MCP",id:"overview-of-mcp",level:2},{value:"Architecture",id:"architecture",level:3},{value:"Transport protocols",id:"transport-protocols",level:3},{value:"MCP Ecosystem",id:"mcp-ecosystem",level:2}];function d(e){const n={a:"a",h1:"h1",h2:"h2",h3:"h3",header:"header",img:"img",li:"li",p:"p",ul:"ul",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"what-is-mcp",children:"What is MCP?"})}),"\n",(0,s.jsx)(n.p,{children:"The Model Context Protocol (MCP) is an open standard designed to enable intelligent AI applications to seamlessly communicate and interoperate with a wide range of external tools and services. MCP abstracts away integration complexities by defining a unified, extensible communication layer that supports context-aware interactions."}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.a,{href:"https://modelcontextprotocol.io/",children:"https://modelcontextprotocol.io/"})}),"\n",(0,s.jsx)(n.h2,{id:"overview-of-mcp",children:"Overview of MCP"}),"\n",(0,s.jsx)(n.h3,{id:"architecture",children:"Architecture"}),"\n",(0,s.jsx)(n.p,{children:"MCP is structured around a modular client-server architecture consisting of three primary components:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Server: The service or knowledge provider, which exposes functionality or data to external clients."}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Client: Acts as a communication endpoint, maintaining a 1:1 connection with a specific Server instance. Clients manage the request/response lifecycle and facilitate context exchange."}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Host: The host manages one or more clients, and provides the MCP-enabled services to the intelligent application"}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{src:t(4006).A+"",width:"1280",height:"494"})}),"\n",(0,s.jsx)(n.p,{children:"This design separates concerns cleanly:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Resource owners manage Server implementations, controlling service logic and data."}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Application developers integrate MCP clients into their hosts, enabling plug-and-play extensibility without needing to know about the service internals."}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"transport-protocols",children:"Transport protocols"}),"\n",(0,s.jsx)(n.p,{children:"MCP supports two primary transport mechanisms:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Standard In/Out: Designed for local services running on the same machine, leveraging standard input/output streams."}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"HTTP (Streamable): Facilitates remote communication over the web."}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Note some documentation refers to SSE (Server-Sent Events) - this has recently been deprecated in favor of standard HTTP streaming."}),"\n",(0,s.jsx)(n.h2,{id:"mcp-ecosystem",children:"MCP Ecosystem"}),"\n",(0,s.jsx)(n.p,{children:"The MCP ecosystem is expanding rapidly, with hundreds of compliant services available. Integrating these services into intelligent applications requires minimal configuration."}),"\n",(0,s.jsx)(n.p,{children:"Catalogs of MCP compliant tools include:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"https://github.com/modelcontextprotocol/servers",children:"https://github.com/modelcontextprotocol/servers"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"https://github.com/punkpeye/awesome-mcp-servers",children:"https://github.com/punkpeye/awesome-mcp-servers"})}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>o,x:()=>a});var i=t(6540);const s={},r=i.createContext(s);function o(e){const n=i.useContext(r);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),i.createElement(r.Provider,{value:n},e.children)}}}]);