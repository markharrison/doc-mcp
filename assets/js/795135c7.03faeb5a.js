"use strict";(self.webpackChunkdoc_mcp=self.webpackChunkdoc_mcp||[]).push([[227],{1935:(e,n,t)=>{t.d(n,{A:()=>s});const s=t.p+"assets/images/demob3-f5038b506778146b0acc21ff958ec9a8.png"},1963:(e,n,t)=>{t.d(n,{A:()=>s});const s=t.p+"assets/images/demob7-8aaf24a48aed59c150d8c6de371be942.png"},2076:(e,n,t)=>{t.d(n,{A:()=>s});const s=t.p+"assets/images/demob8-0a77f9250813e06b5270f54a45649946.png"},2962:(e,n,t)=>{t.d(n,{A:()=>s});const s=t.p+"assets/images/demob6-2476b99b0dcb11de50a5d83ade4c513b.png"},3846:(e,n,t)=>{t.d(n,{A:()=>s});const s=t.p+"assets/images/demob2-9ad08a89723ef561dbfb05696f2473f8.png"},4525:(e,n,t)=>{t.d(n,{A:()=>s});const s=t.p+"assets/images/demob1-5a148128b24d83a1d18873f5d2664118.png"},6928:(e,n,t)=>{t.d(n,{A:()=>s});const s=t.p+"assets/images/demob4-58a28af44591861d9d3f2efe7dabc753.png"},8105:(e,n,t)=>{t.d(n,{A:()=>s});const s=t.p+"assets/images/demob5-627929f75203b6966c0c83dc9499b638.png"},8453:(e,n,t)=>{t.d(n,{R:()=>d,x:()=>c});var s=t(6540);const i={},o=s.createContext(i);function d(e){const n=s.useContext(o);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:d(e.components),s.createElement(o.Provider,{value:n},e.children)}},9672:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>c,default:()=>h,frontMatter:()=>d,metadata:()=>s,toc:()=>r});const s=JSON.parse('{"id":"MCP Demos/mcp-demo2","title":"MCP Demo with GitHub Coding Agent","description":"This MCP demo will use the GitHub Copilot Coding Agent.","source":"@site/docs/04-MCP Demos/05-mcp-demo2.md","sourceDirName":"04-MCP Demos","slug":"/mcp-demo-ghca","permalink":"/doc-mcp/mcp-demo-ghca","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":5,"frontMatter":{"sidebar_label":"Demo with GH Coding Agent","slug":"/mcp-demo-ghca"},"sidebar":"tutorialSidebar","previous":{"title":"Demo with VSCode","permalink":"/doc-mcp/mcp-demo-vsc"},"next":{"title":"MCP Development","permalink":"/doc-mcp/mcp-development"}}');var i=t(4848),o=t(8453);const d={sidebar_label:"Demo with GH Coding Agent",slug:"/mcp-demo-ghca"},c="MCP Demo with GitHub Coding Agent",l={},r=[{value:"Configuration",id:"configuration",level:2},{value:"Demo MCP with GitHub Coding Agent",id:"demo-mcp-with-github-coding-agent",level:2},{value:"Create Issue",id:"create-issue",level:3},{value:"Assign the issue to Copilot",id:"assign-the-issue-to-copilot",level:3},{value:"Check on the Session",id:"check-on-the-session",level:3},{value:"Final Results",id:"final-results",level:3}];function a(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",img:"img",li:"li",p:"p",pre:"pre",ul:"ul",...(0,o.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"mcp-demo-with-github-coding-agent",children:"MCP Demo with GitHub Coding Agent"})}),"\n",(0,i.jsx)(n.p,{children:"This MCP demo will use the GitHub Copilot Coding Agent."}),"\n",(0,i.jsx)(n.p,{children:"The Coding Agent is an autonomous, AI-powered software development agent integrated into GitHub. It can work independently to complete tasks such as fixing bugs, implementing new features, improving test coverage, updating documentation, and addressing technical debt."}),"\n",(0,i.jsx)(n.h2,{id:"configuration",children:"Configuration"}),"\n",(0,i.jsx)(n.p,{children:"First we need to configure MCP servers used by the Coding Agent."}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Navigate to the Repo settings"}),"\n",(0,i.jsxs)(n.li,{children:["Select ",(0,i.jsx)(n.code,{children:"Code and Automation"})," | ",(0,i.jsx)(n.code,{children:"Copilot"})," | ",(0,i.jsx)(n.code,{children:"Coding Agent"}),"."]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"There is a designated area to enter the MCP servers to be used."}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Enter the MCP server configuration, as follows:"}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{ "mcpServers": {\n        "colors" : {\n            "type": "http",\n            "url": "https://colorsmcp.azure1.dev/",\n            "tools": ["*"]\n        }\n} }\n'})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{src:t(4525).A+"",width:"1280",height:"1392"})}),"\n",(0,i.jsx)(n.h2,{id:"demo-mcp-with-github-coding-agent",children:"Demo MCP with GitHub Coding Agent"}),"\n",(0,i.jsx)(n.h3,{id:"create-issue",children:"Create Issue"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Create a New Issue ... enter the following and hit ",(0,i.jsx)(n.code,{children:"Create"})]}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"I need a palette of four colors from the green family - plus black ...\nplease add to a HTML file called green.html so I can inspect.\n"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{src:t(3846).A+"",width:"1280",height:"1392"})}),"\n",(0,i.jsx)(n.h3,{id:"assign-the-issue-to-copilot",children:"Assign the issue to Copilot"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Assign the Issue to Copilot ... this will kick off the Coding Agent"}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{src:t(1935).A+"",width:"1280",height:"1392"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Notice after a few seconds, Copilot picks this up and creates a draft Pull Request marked as WIP (work in progress)"}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{src:t(6928).A+"",width:"1280",height:"1392"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Click on the link to the Pull Request"}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"check-on-the-session",children:"Check on the Session"}),"\n",(0,i.jsx)(n.p,{children:"Copilot starts to add its thinking and progress to the Pull Request"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{src:t(8105).A+"",width:"1280",height:"1392"})}),"\n",(0,i.jsxs)(n.p,{children:["Click on  ",(0,i.jsx)(n.code,{children:"View Session"})," to get more detailed view of Copilots activity."]}),"\n",(0,i.jsx)(n.p,{children:"The session log can be lengthy, but if you scroll down, you\u2019ll see where Copilot calls the ColorsMCP server to retrieve the color information."}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{src:t(2962).A+"",width:"1280",height:"1392"})}),"\n",(0,i.jsx)(n.p,{children:"Once completed, the Pull Request is updated with a summary of the actions taken."}),"\n",(0,i.jsx)(n.p,{children:"A reviewer now has an opportunity to inspect what has been done and the has the option to accept the work done by Copilot."}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{src:t(1963).A+"",width:"1280",height:"1392"})}),"\n",(0,i.jsx)(n.h3,{id:"final-results",children:"Final Results"}),"\n",(0,i.jsx)(n.p,{children:"The green palette HTML file created will be in the branch used by Copilot."}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{src:t(2076).A+"",width:"1280",height:"1392"})}),"\n",(0,i.jsx)(n.p,{children:"We saw from the Copilot logs, that the color information knowledge was obtained from the ColorsMCP server."})]})}function h(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(a,{...e})}):a(e)}}}]);